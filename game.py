import streamlit as st
import random

st.set_page_config(page_title="X√°c Su·∫•t ƒê·∫°i Chi·∫øn", layout="centered")
st.title("üé≤ X√ÅC SU·∫§T ƒê·∫†I CHI·∫æN")

# Kh·ªüi t·∫°o tr·∫°ng th√°i tr√≤ ch∆°i
if 'score' not in st.session_state:
    st.session_state.score = {"ƒê·ªôi A": 0, "ƒê·ªôi B": 0, "ƒê·ªôi C": 0}
    st.session_state.used_questions = {"ƒê·ªôi A": set(), "ƒê·ªôi B": set(), "ƒê·ªôi C": set()}
    st.session_state.current_question = None
    st.session_state.current_options = []
    st.session_state.current_answer = None
    st.session_state.show_answer = False
    st.session_state.game_over = False
    st.session_state.last_difficulty = None
    st.session_state.answered_counts = {"ƒê·ªôi A": 0, "ƒê·ªôi B": 0, "ƒê·ªôi C": 0}
    st.session_state.answer_log = {"ƒê·ªôi A": [], "ƒê·ªôi B": [], "ƒê·ªôi C": []}

# Danh s√°ch c√¢u h·ªèi
questions = [
    {"id": 1, "category": "X√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán", "level": 1, "question": "M·ªôt h·ªôp c√≥ 10 th·∫ª s·ªë ch·∫µn. N·∫øu bi·∫øt ƒë√£ l·∫•y th·∫ª ch·∫µn, x√°c su·∫•t ƒë·ªÉ l√† s·ªë 10 l√†?", "options": ["1/20", "1/2", "1/10", "1/5"], "answer": "1/10"},
    {"id": 2, "category": "X√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán", "level": 2, "question": "60% h·ªçc sinh l√† n·ªØ. 80% n·ªØ gi·ªèi To√°n, 50% nam gi·ªèi To√°n. Ch·ªçn h·ªçc sinh gi·ªèi To√°n. X√°c su·∫•t l√† n·ªØ?", "options": ["0.6", "0.5", "0.8", "0.6957"], "answer": "0.6957"},
    {"id": 3, "category": "X√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán", "level": 3, "question": "L·ªõp c√≥ 40% ch·ªçn A01. T·ªâ l·ªá ƒë·∫≠u A01 l√† 60%, B00 l√† 80%. ƒê√£ ƒë·∫≠u, x√°c su·∫•t ch·ªçn A01 l√†?", "options": ["0.4", "0.333", "0.2857", "0.6"], "answer": "0.2857"},
    {"id": 4, "category": "X√°c su·∫•t to√†n ph·∫ßn", "level": 1, "question": "M√°y b·ªã l·ªói 20%. N·∫øu l·ªói: ph√°t hi·ªán ƒë√∫ng 95%. Kh√¥ng l·ªói: d∆∞∆°ng t√≠nh gi·∫£ 1%. X√°c su·∫•t b·ªã ph√°t hi·ªán l√†?", "options": ["0.2", "0.19", "0.058", "0.2"], "answer": "0.058"},
    {"id": 5, "category": "X√°c su·∫•t to√†n ph·∫ßn", "level": 2, "question": "ƒê∆°n h√†ng t·ª´ A(50%), B(30%), C(20%). X√°c su·∫•t ƒë√∫ng h·∫°n: 90%, 80%, 70%. X√°c su·∫•t giao ƒë√∫ng l√†?", "options": ["0.80", "0.75", "0.83", "0.70"], "answer": "0.83"},
    {"id": 6, "category": "Bayes & th·ª±c t·∫ø", "level": 3, "question": "M√°y bay ph√°t hi·ªán v·∫≠t th·ªÉ v√πng C. P(C)=0.2, P(A)=0.5, P(B)=0.3. P(ƒë√∫ng|C)=0.9, P(ng·ªô nh·∫≠n)=0.2. P(th·ª±c ·ªü C)?", "options": ["0.2", "0.4737", "0.9", "0.6"], "answer": "0.4737"},
    {"id": 7, "category": "X√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán", "level": 1, "question": "Bi·∫øt m·ªôt h·ªçc sinh l√† h·ªçc sinh gi·ªèi. X√°c su·∫•t ƒë·ªÉ em ƒë√≥ gi·ªèi c·∫£ To√°n v√† L√Ω l√† 0.3, x√°c su·∫•t gi·ªèi L√Ω l√† 0.6. H·ªèi x√°c su·∫•t em ƒë√≥ gi·ªèi To√°n bi·∫øt r·∫±ng gi·ªèi L√Ω?", "options": ["0.5", "0.3", "0.6", "0.75"], "answer": "0.5"},
    {"id": 8, "category": "X√°c su·∫•t to√†n ph·∫ßn", "level": 2, "question": "M·ªôt s·∫£n ph·∫©m t·ª´ 3 nh√† m√°y A, B, C v·ªõi t·ªâ l·ªá 40%, 40%, 20%. T·ªâ l·ªá ƒë·∫°t: A 90%, B 80%, C 70%. H·ªèi x√°c su·∫•t m·ªôt s·∫£n ph·∫©m ƒë·∫°t?", "options": ["0.8", "0.82", "0.83", "0.84"], "answer": "0.82"},
    {"id": 9, "category": "Bayes & th·ª±c t·∫ø", "level": 3, "question": "M·ªôt b·ªánh r·∫•t hi·∫øm, t·ªâ l·ªá m·∫Øc l√† 0.1%. X√©t nghi·ªám d∆∞∆°ng t√≠nh ƒë√∫ng 99%, d∆∞∆°ng t√≠nh gi·∫£ 2%. H·ªèi x√°c su·∫•t th·∫≠t s·ª± m·∫Øc b·ªánh n·∫øu c√≥ k·∫øt qu·∫£ d∆∞∆°ng t√≠nh?", "options": ["0.99", "0.5", "0.047", "0.33"], "answer": "0.047"},
    {"id": 10, "category": "X√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán", "level": 1, "question": "T·ª´ m·ªôt b·ªô b√†i 52 l√°, r√∫t ng·∫´u nhi√™n m·ªôt l√°, bi·∫øt r·∫±ng l√° ƒë√≥ l√† b√≠ch. X√°c su·∫•t ƒë·ªÉ l√† qu√¢n √Åt l√†?", "options": ["1/52", "1/4", "1/13", "1/12"], "answer": "1/13"},
    {"id": 11, "category": "X√°c su·∫•t to√†n ph·∫ßn", "level": 2, "question": "Chu·ªìng I c√≥ 5 th·ªè ƒëen, 10 th·ªè tr·∫Øng. Chu·ªìng II c√≥ 7 th·ªè ƒëen, 3 th·ªè tr·∫Øng. Chuy·ªÉn 1 th·ªè ng·∫´u nhi√™n t·ª´ chu·ªìng II sang I r·ªìi r√∫t t·ª´ I. X√°c su·∫•t l·∫•y ƒë∆∞·ª£c th·ªè tr·∫Øng?", "options": ["0.5", "0.55", "0.6", "0.625"], "answer": "0.625"},
    {"id": 12, "category": "X√°c su·∫•t to√†n ph·∫ßn", "level": 2, "question": "Nh√† m√°y X: 80% s·∫£n ph·∫©m ƒë·∫°t chu·∫©n. N·∫øu ƒë·∫°t: 0.99 ƒë∆∞·ª£c ƒë√≥ng OTK. N·∫øu kh√¥ng ƒë·∫°t: 0.05 v·∫´n b·ªã ƒë√≥ng OTK. X√°c su·∫•t s·∫£n ph·∫©m ƒë∆∞·ª£c ƒë√≥ng d·∫•u OTK?", "options": ["0.8", "0.79", "0.842", "0.814"], "answer": "0.814"},
    {"id": 13, "category": "X√°c su·∫•t to√†n ph·∫ßn", "level": 2, "question": "ƒê·ªôi I c√≥ 5 ng∆∞·ªùi, m·ªói ng∆∞·ªùi c√≥ x√°c su·∫•t ƒë·∫°t HCV l√† 0.65. ƒê·ªôi II c√≥ 7 ng∆∞·ªùi, x√°c su·∫•t ƒë·∫°t HCV l√† 0.55. Ch·ªçn ng·∫´u nhi√™n 1 ng∆∞·ªùi. X√°c su·∫•t ng∆∞·ªùi ƒë√≥ ƒë·∫°t HCV?", "options": ["0.59", "0.6", "0.575", "0.583"], "answer": "0.583"},
    {"id": 14, "category": "Bayes & th·ª±c t·∫ø", "level": 3, "question": "B·ªô l·ªçc th∆∞ r√°c: ch·∫∑n 95% th∆∞ r√°c, nh∆∞ng 1% th∆∞ ƒë√∫ng c≈©ng b·ªã ch·∫∑n. T·ªâ l·ªá th∆∞ r√°c l√† 3%. M·ªôt th∆∞ b·ªã ch·∫∑n, x√°c su·∫•t n√≥ l√† th∆∞ r√°c?", "options": ["0.75", "0.5", "0.22", "0.743"], "answer": "0.743"},
    {"id": 15, "category": "X√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán", "level": 2, "question": "Gieo 2 x√∫c x·∫Øc. Bi·∫øt c√≥ √≠t nh·∫•t 1 x√∫c x·∫Øc ra m·∫∑t 5 ch·∫•m. X√°c su·∫•t t·ªïng ch·∫•m >= 10 l√†?", "options": ["0.25", "0.3", "0.33", "0.36"], "answer": "0.36"},
    {"id": 16, "category": "X√°c su·∫•t to√†n ph·∫ßn", "level": 2, "question": "An l√†m 2 th√≠ nghi·ªám. X√°c su·∫•t th√†nh c√¥ng l·∫ßn 1 l√† 0.7. N·∫øu l·∫ßn 1 th√†nh c√¥ng, l·∫ßn 2 th√†nh c√¥ng v·ªõi 0.9; n·∫øu th·∫•t b·∫°i th√¨ l·∫ßn 2 th√†nh c√¥ng 0.4. X√°c su·∫•t c·∫£ hai c√πng th√†nh c√¥ng?", "options": ["0.63", "0.7", "0.5", "0.42"], "answer": "0.63"},
    {"id": 17, "category": "X√°c su·∫•t to√†n ph·∫ßn", "level": 3, "question": "Trong t√∫i c√≥ 6 k·∫πo cam, c√≤n l·∫°i l√† v√†ng. H√† l·∫•y 2 c√°i li√™n ti·∫øp kh√¥ng ho√†n l·∫°i. Bi·∫øt x√°c su·∫•t l·∫•y 2 cam l√† 1/3. H·ªèi ban ƒë·∫ßu t√∫i c√≥ bao nhi√™u k·∫πo?", "options": ["8", "9", "10", "12"], "answer": "9"},
    {"id": 18, "category": "X√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán", "level": 1, "question": "T·ª´ b·ªô b√†i 52 l√°, bi·∫øt ƒë√£ r√∫t l√° c∆°. X√°c su·∫•t r√∫t ƒë∆∞·ª£c l√° c∆° h√¨nh l√†?", "options": ["1/13", "1/26", "1/4", "1/3"], "answer": "1/13"},
    {"id": 19, "category": "X√°c su·∫•t to√†n ph·∫ßn", "level": 1, "question": "C√≥ 60% h·ªçc sinh nam, 40% n·ªØ. Nam ƒë·∫øn l·ªõp ƒë√∫ng gi·ªù 80%, n·ªØ 90%. X√°c su·∫•t h·ªçc sinh b·∫•t k·ª≥ ƒë·∫øn ƒë√∫ng gi·ªù?", "options": ["0.84", "0.86", "0.88", "0.9"], "answer": "0.84"},
    {"id": 20, "category": "X√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán", "level": 1, "question": "Bi·∫øt h·ªçc sinh tham gia CLB To√°n. X√°c su·∫•t ƒë·ªÉ l√† h·ªçc sinh l·ªõp 12 n·∫øu 40% l·ªõp 12 tham gia, to√†n tr∆∞·ªùng 20% l√† l·ªõp 12?", "options": ["0.5", "0.4", "0.2", "0.2857"], "answer": "0.2857"},
    {"id": 21, "category": "Bayes & th·ª±c t·∫ø", "level": 1, "question": "M·ªôt test COVID c√≥ ƒë·ªô nh·∫°y 0.95, ƒë·ªô ƒë·∫∑c hi·ªáu 0.99. T·ªâ l·ªá F0 l√† 5%. X√°c su·∫•t d∆∞∆°ng t√≠nh th·∫≠t s·ª± l√†?", "options": ["0.83", "0.75", "0.6", "0.33"], "answer": "0.83"},
    {"id": 22, "category": "X√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán", "level": 1, "question": "R√∫t 1 vi√™n bi t·ª´ h·ªôp c√≥ 5 ƒë·ªè, 5 xanh. Bi·∫øt l√† bi kh√¥ng ƒë·ªè. X√°c su·∫•t l√† xanh l√†?", "options": ["1", "0.5", "5/9", "5/10"], "answer": "1"},
    {"id": 23, "category": "X√°c su·∫•t to√†n ph·∫ßn", "level": 2, "question": "3 m√°y s·∫£n xu·∫•t b√°nh: A (30%), B (50%), C (20%). X√°c su·∫•t s·∫£n ph·∫©m l·ªói: A 5%, B 8%, C 10%. T√≠nh x√°c su·∫•t ch·ªçn ng·∫´u nhi√™n b√°nh b·ªã l·ªói?", "options": ["0.072", "0.065", "0.08", "0.07"], "answer": "0.072"},
    {"id": 24, "category": "Bayes & th·ª±c t·∫ø", "level": 2, "question": "Ti·ªám b√°nh c√≥ 3 lo·∫°i b√°nh: A (40%), B (35%), C (25%). B√°nh A ngon 80%, B 60%, C 50%. ƒê√£ ƒÉn ngon, x√°c su·∫•t l√† b√°nh A?", "options": ["0.5", "0.47", "0.42", "0.4"], "answer": "0.47"},
    {"id": 25, "category": "X√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán", "level": 2, "question": "Gieo 2 x√∫c x·∫Øc. Bi·∫øt c√≥ √≠t nh·∫•t m·ªôt m·∫∑t l√† 6. T√≠nh x√°c su·∫•t t·ªïng l√† 7?", "options": ["1/11", "1/12", "1/6", "1/9"], "answer": "1/11"},
    {"id": 26, "category": "X√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán", "level": 2, "question": "M·ªôt h·ªôp c√≥ 4 b√≥ng ƒë·ªè, 6 b√≥ng xanh. R√∫t 1 b√≥ng kh√¥ng ho√†n l·∫°i, sau ƒë√≥ r√∫t b√≥ng th·ª© 2. X√°c su·∫•t b√≥ng th·ª© hai l√† ƒë·ªè bi·∫øt b√≥ng ƒë·∫ßu l√† xanh?", "options": ["4/9", "2/5", "1/2", "4/10"], "answer": "4/9"},
    {"id": 27, "category": "Bayes & th·ª±c t·∫ø", "level": 2, "question": "Trong kho c√≥ 2 lo·∫°i s·∫£n ph·∫©m A (60%), B (40%). A l·ªói 2%, B l·ªói 5%. Ch·ªçn ng·∫´u nhi√™n s·∫£n ph·∫©m b·ªã l·ªói. X√°c su·∫•t l√† s·∫£n ph·∫©m B?", "options": ["0.5", "0.4", "0.25", "0.526"], "answer": "0.526"},
{"id": 28, "category": "Bayes & th·ª±c t·∫ø", "level": 3, "question": "H·ªá th·ªëng ph√°t hi·ªán gian l·∫≠n online v·ªõi ƒë·ªô ch√≠nh x√°c 98%. T·ªâ l·ªá gian l·∫≠n th·∫≠t l√† 1%. M·ªôt tr∆∞·ªùng h·ª£p b·ªã c·∫£nh b√°o. X√°c su·∫•t th·∫≠t s·ª± gian l·∫≠n?", "options": ["0.33", "0.5", "0.09", "0.327"], "answer": "0.327"},
    {"id": 29, "category": "X√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán", "level": 3, "question": "M·ªôt nh√≥m c√≥ 4 nam, 6 n·ªØ. 3 ng∆∞·ªùi ƒë∆∞·ª£c ch·ªçn ng·∫´u nhi√™n. Bi·∫øt c√≥ √≠t nh·∫•t 2 n·ªØ, x√°c su·∫•t c√≥ ƒë·ªß c·∫£ nam v√† n·ªØ l√†?", "options": ["0.6", "0.75", "0.85", "0.9"], "answer": "0.75"},
    {"id": 30, "category": "X√°c su·∫•t to√†n ph·∫ßn", "level": 3, "question": "B·ªánh vi·ªán c√≥ 3 khoa. M·ªói khoa c√≥ t·ªâ l·ªá b·ªánh nh√¢n kh√°c nhau v√† x√°c su·∫•t ph·ª•c h·ªìi kh√°c nhau. Cho b·∫£ng d·ªØ li·ªáu. T√≠nh x√°c su·∫•t ch·ªçn 1 b·ªánh nh√¢n ph·ª•c h·ªìi?", "options": ["0.7", "0.74", "0.78", "0.8"], "answer": "0.74"},
    {"id": 31, "category": "Bayes & th·ª±c t·∫ø", "level": 3, "question": "Trong h·ªá th·ªëng ph√°t hi·ªán gian l·∫≠n th·∫ª, t·ªâ l·ªá b√°o ƒë·ªông gi·∫£ l√† 1%, t·ª∑ l·ªá ƒë√∫ng l√† 90%. T·ªâ l·ªá ng∆∞·ªùi gian l·∫≠n th·∫≠t l√† 0.2%. M·ªôt b√°o ƒë·ªông xu·∫•t hi·ªán. X√°c su·∫•t ƒë√≥ l√† gian l·∫≠n th·∫≠t?", "options": ["0.15", "0.19", "0.18", "0.1538"], "answer": "0.1538"},
    {"id": 32, "category": "X√°c su·∫•t c√≥ ƒëi·ªÅu ki·ªán", "level": 3, "question": "C√≥ 3 h·ªôp, m·ªói h·ªôp ch·ª©a s·ªë l∆∞·ª£ng bi ƒë·ªè/xanh kh√°c nhau. Ch·ªçn ng·∫´u nhi√™n 1 h·ªôp, r·ªìi ch·ªçn 1 bi. Bi·∫øt ƒë√£ r√∫t ƒë∆∞·ª£c bi ƒë·ªè. X√°c su·∫•t l·∫•y t·ª´ h·ªôp th·ª© 1 l√†?", "options": ["0.3", "0.5", "0.6", "0.4"], "answer": "0.4"}
]

st.sidebar.header("üéÆ ƒêi·ªÅu khi·ªÉn tr√≤ ch∆°i")
team = st.sidebar.selectbox("Ch·ªçn ƒë·ªôi ch∆°i:", ["ƒê·ªôi A", "ƒê·ªôi B", "ƒê·ªôi C"])
difficulty = st.sidebar.radio("Ch·ªçn m·ª©c ƒë·ªô c√¢u h·ªèi:", [1, 2, 3], format_func=lambda x: {1: "D·ªÖ (1 ƒëi·ªÉm)", 2: "V·ª´a (2 ƒëi·ªÉm)", 3: "Kh√≥ (3 ƒëi·ªÉm)"}[x])

# Hi·ªÉn th·ªã s·ªë l∆∞·ª£t c√≤n l·∫°i
st.sidebar.markdown("---")
st.sidebar.markdown("### üîÑ S·ªë l∆∞·ª£t c√≤n l·∫°i:")
for t in ["ƒê·ªôi A", "ƒê·ªôi B", "ƒê·ªôi C"]:
    remaining = 6 - st.session_state.answered_counts[t]
    st.sidebar.write(f"{t}: {remaining} l∆∞·ª£t")

# Gi·ªõi h·∫°n 6 c√¢u m·ªói ƒë·ªôi
if st.session_state.answered_counts[team] >= 6:
    st.warning(f"üö´ {team} ƒë√£ ho√†n th√†nh 6 c√¢u h·ªèi!")
else:
    if st.session_state.last_difficulty != difficulty:
        st.session_state.current_question = None
        st.session_state.current_options = []
        st.session_state.current_answer = None
        st.session_state.show_answer = False
        st.session_state.last_difficulty = difficulty

    available_questions = [q for q in questions if q['level'] == difficulty and q['id'] not in st.session_state.used_questions[team]]

    if not st.session_state.current_question and available_questions:
        q = random.choice(available_questions)
        st.session_state.current_question = q
        st.session_state.current_options = q['options']
        st.session_state.current_answer = q['answer']
        st.session_state.show_answer = False

    if st.session_state.current_question:
        q = st.session_state.current_question
        st.subheader(f"üìå {q['category']} ‚Äì M·ª©c {q['level']} ƒëi·ªÉm")
        st.markdown(f"**{q['question']}**")

        user_answer = st.radio("Ch·ªçn ƒë√°p √°n:", st.session_state.current_options, key=f"answer_{q['id']}_{team}")

        if st.button("‚úÖ Tr·∫£ l·ªùi"):
            st.session_state.show_answer = True
            st.session_state.used_questions[team].add(q['id'])
            st.session_state.answered_counts[team] += 1
            correct = user_answer == q['answer']
            st.session_state.answer_log[team].append({
                "question": q['question'],
                "answer": user_answer,
                "correct_answer": q['answer'],
                "correct": correct,
                "points": q['level'] if correct else 0
            })
            if correct:
                st.success(f"üéâ Ch√≠nh x√°c! +{q['level']} ƒëi·ªÉm cho {team}")
                st.session_state.score[team] += q['level']
            else:
                st.error(f"‚ùå Sai r·ªìi! ƒê√°p √°n ƒë√∫ng l√†: {q['answer']}")

        if st.session_state.show_answer:
            if st.button("üîÅ C√¢u h·ªèi m·ªõi"):
                st.session_state.current_question = None
                st.session_state.current_options = []
                st.session_state.current_answer = None
                st.session_state.show_answer = False

st.markdown("---")
st.markdown("### üìä B·∫£ng ƒëi·ªÉm hi·ªán t·∫°i")
st.write(st.session_state.score)

if all(count >= 6 for count in st.session_state.answered_counts.values()):
    st.markdown("---")
    st.success("üéâ Tr√≤ ch∆°i k·∫øt th√∫c!")
    winner = max(st.session_state.score, key=st.session_state.score.get)
    st.balloons()
    st.markdown(f"üèÜ **ƒê·ªôi chi·∫øn th·∫Øng l√†: {winner} v·ªõi {st.session_state.score[winner]} ƒëi·ªÉm!**")

    st.markdown("---")
    st.markdown("### üß© T·ªïng k·∫øt c√¢u tr·∫£ l·ªùi t·ª´ng ƒë·ªôi")
    for team_name, logs in st.session_state.answer_log.items():
        st.markdown(f"#### üìå {team_name}")
        for idx, log in enumerate(logs, 1):
            result = "‚úÖ ƒê√∫ng" if log['correct'] else "‚ùå Sai"
            st.markdown(f"**C√¢u {idx}:** {log['question']}  ")
            st.markdown(f"- Tr·∫£ l·ªùi: {log['answer']} ({result})")
            st.markdown(f"- ƒê√°p √°n ƒë√∫ng: {log['correct_answer']}, ƒêi·ªÉm: {log['points']}\n")
